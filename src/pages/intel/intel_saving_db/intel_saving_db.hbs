{{#> layouts/main title="Saving to Database" pagename="intel_saving_db" category_1="NextGen Intel" category_2="Theme Settings" heading="Theme Settings: <span class='fw-400'>Saving to Database</span>" pagedescription="How to save and load settings from database"}}

{{#*inline "head-block"}}
<link rel="stylesheet" media="screen, print" href="css/theme-demo.min.css">
{{/inline}}

{{#*inline "content-block"}}

<div class="alert alert-primary p-2">
	<strong>Heads Up!</strong> 	All changes are stored to localStorage by default. <strong>pushSettings()</strong> inherits this trait. Set <code>"storeLocally"</code> to <strong>false</strong> via <strong>app.config.js</strong> or <strong>app.core.js (concatinated)</strong> to disable this inheritance.
</div>
<div class="card p-3 mb-5">

	<div class="row">

		<div class="col">

			<label for="pushSettings_input">
				<strong>"pushSettings" applies class[array] to App</strong> <br>
				<strong>e.g.</strong> $.ajax({ .. success: function (data) {  var DataBase_str = data[i].appSettings } .. }); initApp.pushSettings( DataBase_str );
			</label>
			<div class="input-group mb-4">
				<input type="text" id="pushSettings_input" list="css_list" name="pushSettings_input" class="form-control" placeholder="e.g. header-function-fixed nav-function-fixed" >
				<datalist id="css_list">
					<option value="header-function-fixed">
					<option value="nav-function-fixed">
					<option value="nav-function-minify">
					<option value="nav-function-hidden">
					<option value="nav-function-top">
					<option value="mod-main-boxed">
					<option value="nav-mobile-push">
					<option value="nav-mobile-no-overlay">
					<option value="nav-mobile-slide-out">
					<option value="mod-bigger-font">
				</datalist>
				<span class="input-group-btn">
					<button class="btn btn-secondary btn-w-m" type="button" id="pushSettings_btn">push()</button>
				</span>
			</div>

			<label for="getSettings_input">
				<strong>"getSettings" filters and returns current App settings for database storage</strong> <br>
				<strong>e.g.</strong> var DataBase_str = initApp.getSettings(); $.ajax({ data: {DataBase_str}, dataType: "json" ... })
			</label>
			<div class="input-group">
				<input type="text" id="getSettings_input" name="getSettings_input" readonly="readonly" class="form-control" placeholder="filters and returns nav-*, header-*, mod-*, & display-*">
				<span class="input-group-btn">
					<button class="btn btn-secondary btn-w-m" type="button" id="getSettings_btn">get()</button>
				</span>
			</div>
			<small class="form-text text-muted">filters and returns nav-*, header-*, mod-*, & display-*</small>

			<hr>
			
			<button class="btn btn-outline-danger mr-1" type="button" data-action="app-reset"><u>R</u>eset Settings</button>
			<button class="btn btn-outline-success" type="button" id="ng_eventlog_clear"><u>C</u>lear Events</button>
		</div>

		<div class="col">
			<div id="app-eventlog" class="card p-1 d-block"></div>
		</div>
		
	</div>
	
</div>

{{/inline}}

{{#*inline "scripts-block"}}
<script type="text/javascript">

	var ng_eventlog = function () {

		if($('#app-eventlog').length) {

			var dt = new Date(),
				time = "<div class='p-1'><span class='badge badge-primary fw-500 border-radius-0'>" + dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds() + " </span> <i>body class changed to: </i>";
			$('#app-eventlog').prepend( time + "<strong> [ " + initApp.getSettings().split(' ') + " ] </strong>" + "</div/>" ); 

		}

	};

	var ng_eventlog_clear = function () {
		$('#app-eventlog').empty();
	}

	var ng_pushSettings = function () {
		if ( $('#pushSettings_input').val() ) {
			initApp.pushSettings( $('#pushSettings_input').val() );
			$('#pushSettings_input').val('');
			ng_eventlog();
		}
	}

	var ng_getSettings = function () {
		var getSettings_array = initApp.getSettings();
		if (getSettings_array) {
			$('#getSettings_input').val( getSettings_array )
		}
		else {
			$('#getSettings_input').val('<body> class is empty or nothing to return')
		}
	}

	$('[data-action="toggle"]').on('click', function(){
		ng_eventlog();
	});

	$('#pushSettings_btn').on('click', function(){
		ng_pushSettings();
	});	

	$('#getSettings_btn').on('click', function(){
		ng_getSettings();
	});	

	$('#ng_eventlog_clear').on('click', function(){
		ng_eventlog_clear();
	});	

</script>
{{/inline}}

{{/layouts/main}}
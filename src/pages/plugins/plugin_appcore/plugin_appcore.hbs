{{#> layouts/main title="App.Core" pagename="plugin_appcore" category_1="Core Plugins" heading="App.core.js <sup class='badge badge-warning fw-300 fs-sm'>main-application</sup>" pagedescription="App.Core.js is the main application plugin"}}

{{#*inline "head-block"}}{{/inline}}

{{#*inline "header-space-block"}}test{{/inline}}

{{#*inline "content-block"}}

<div class="row">


    <div class="col-lg-6 col-xl-6">

        <div class="card p-3 mrg-b-gutter d-block">

            <h3>
                App <span class="fw-300">console.log</span> 
                <small>
                    Allows you to
                </small>
            </h3>

            <div id="ng-eventlog" class="card bg-faded p-1" style="max-height:450px; overflow:auto;"></div>

        </div>

        <div class="card p-3 mrg-b-gutter d-block">

            <h3>
                App <span class="fw-300">functions</span> 
                <small>
                    Allows you to
                </small>
            </h3>

            <table class="table table-hover table-bordered bg-white">
                <thead>
                    <tr>
                        <th>
                            Usage
                        </th>
                        <th>
                            Returns
                        </th>
                        <th>
                            Description
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <code>initApp.saveSettings()</code>
                        </td>
                        <td>
                            <i class="text-muted">-</i>
                        </td>
                        <td class="fs-xs">
                            Pushes selected classes from the <code>body</code> tag to localstorage/database
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.resetSettings()</code>
                        </td>
                        <td>
                            <i class="text-muted">-</i>
                        </td>
                        <td class="fs-xs">
                            Remove classes from <code>body</code> & saves to localstorage/database
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.accessIndicator()</code>
                        </td>
                        <td>
                            <i class="text-muted">-</i>
                        </td>
                        <td class="fs-xs">
                            Indicator for Save Settings (mostly aesthetics)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.pushSettings(.class_1 .class_2)</code>
                        </td>
                        <td>
                            <i class="text-muted">-</i>
                        </td>
                        <td class="fs-xs">
                            Push array to <code>body</code> tag. See <a href="intel_saving_db.html">saving to database</a> for more details
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.getSettings()</code>
                        </td>
                        <td>
                            <i class="fw-500 text-primary">string</i>
                        </td>
                        <td class="fs-xs">
                            Fetch class names from <code>body</code> and convert them to JSON string. See <a href="intel_saving_db.html">saving to database</a> for more details
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.getNewWindowHeight()</code>
                        </td>
                        <td>
                            <i class="fw-500 text-success">int</i>
                        </td>
                        <td class="fs-xs">
                            Returns window height for layout calculations
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.detectBrowserType()</code>
                        </td>
                        <td>
                            <i class="fw-500 text-primary">string</i>
                        </td>
                        <td class="fs-xs">
                            Detects webkit and chrome browsers
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.addDeviceType()</code>
                        </td>
                        <td>
                            <i class="fw-500 text-primary">string</i>
                        </td>
                        <td class="fs-xs">
                            Detects whether device is desktop or mobile
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.fixAppHeight()</code>
                        </td>
                        <td>
                            <i class="text-muted">-</i>
                        </td>
                        <td class="fs-xs">
                            Saves app settings to localstorage
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.windowScrollEvents()</code>
                        </td>
                        <td>
                            <i class="text-muted">-</i>
                        </td>
                        <td class="fs-xs">
                            Saves app settings to localstorage
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.checkSettingConditions()</code>
                        </td>
                        <td>
                            <i class="text-muted">-</i>
                        </td>
                        <td class="fs-xs">
                            Saves app settings to localstorage
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.ngMenu("#id")</code>
                        </td>
                        <td>
                            <i class="fw-500 text-primary">string</i>
                        </td>
                        <td class="fs-xs">
                            Saves app settings to localstorage
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.mobileCheckActivation()</code>
                        </td>
                        <td>
                            <i class="fw-500 text-danger">bool</i>
                        </td>
                        <td class="fs-xs">
                            Saves app settings to localstorage
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>onclick="initApp.toggleVisibility('foo');"</code>
                        </td>
                        <td>
                            <i class="text-muted">-</i>
                        </td>
                        <td class="fs-xs">
                            Saves app settings to localstorage
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>initApp.domReadyMisc()</code>
                        </td>
                        <td>
                            <i class="text-muted">-</i>
                        </td>
                        <td class="fs-xs">
                            Fires a series of events, see "Initialization shell" to your left, for more details.
                        </td>
                    </tr>                
                </tbody>
            </table>

        </div>

    </div>

    <div class="col-lg-6 col-xl-6">

        <div class="card p-3 mrg-b-gutter d-block">

            <h3>
                Config <span class="fw-300">settings</span> 
                <small>
                    Allows you to
                </small>
            </h3>

<pre class="prettyprint p-2 m-0 h-auto border-0" style="height:700px; overflow:auto; background: rgba(255, 138, 31, 0.07); font-size:100%">
var myapp_config = {
    root_: $('body'),
    windowHeight: $(window).height(),
    navHeightGap: ($('#nav-footer').height() || 0) + $('header').height() + 1,
    throttleDelay: 450, //ms
    thisDevice: null, 
    isMobile: (/iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i
                .test(navigator.userAgent.toLowerCase())), 
    mobileMenuTrigger: null,
    isWebkit: ((!!window.chrome && !!window.chrome.webstore) === true || 
                Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') 
                > 0 === true),
    isChrome: (/chrom(e|ium)/.test(navigator.userAgent.toLowerCase())),
    debugState: true, 
    disableRippleEffect: false, 
    mythemeAnchor: '#mytheme',
    navAnchor: '#primary-nav',
    navSpeed: 500, 
    navClosedSign: 'icon icon-chevron-down',
    navOpenedSign: 'icon icon-chevron-up',
    navAccordion: true,
    storeLocally: true
};</pre>

        </div> 

        <div class="card p-3 mrg-b-gutter d-block">

            <h3>
                Initilization <span class="fw-300">shell</span> 
                <small>
                    Allows you to
                </small>
            </h3>
<pre class="prettyprint p-2 m-0 h-auto border-0 fs-base" style="height:700px; overflow:auto; background: rgba(255, 138, 31, 0.07); font-size:100%">
/**
 * App Initialize
 * Initializes the app with intApp();
 **/
var initApp = (function(app) {
    app.saveSettings = function () { ... }
    app.resetSettings = function () { ... }
    app.accessIndicator = function () { ... }
    app.pushSettings = function (DB_string) { ... }
    app.getSettings = function () { ... }
    app.getNewWindowHeight = function () { ... }
    app.detectBrowserType = function () { ... }
    app.addDeviceType = function() { ... }
    app.fixAppHeight = function () { ... }
    app.windowScrollEvents = function () { ... }
    app.checkSettingConditions = function() { ... }
    app.ngMenu = function() { ... }
    app.mobileCheckActivation = function(){ ... }
    app.toggleVisibility = function (id) { ... }
    app.domReadyMisc = function() { 
       // get app date;
       // activate last tab used
       // activate/destroy slimscroll
       // activates tooltip
       // activates image lazyload mechanic
       // enable dropdown
       // enable ripple effect
       // attach action buttons
       // menu tap actions (for mobile)
       // initialize windows mobile 8 fix for BS4
       ...
    }
    return app;
})({});

/* Bind the throttled handler to the resize event. */
$(window).resize(
    $.throttle( myapp_config.throttleDelay, function (e) {
        ...
    })
); 

/* Bind the throttled handler to the scroll event */
$(window).scroll(
    $.throttle( myapp_config.throttleDelay, function (e) {
        ...
    })
);

/* DOCUMENT LOADED EVENT */
jQuery(document).ready(function() {
    ...
});</pre>

        </div>

    </div>	

</div>




{{/inline}}

{{#*inline "scripts-block"}}
<script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?lang=css&amp;skin=default"></script>
<script>
    
myapp_config.debugState = true;

    var lastMsg = "",
        repeatCount = 0,
        getTime = function () {
            var dt = new Date(),
                time = dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
            return time;
        };

    if (typeof console  != "undefined") 
        if (typeof console.log != 'undefined') {
            console.nglog = console.log;
        }
        else {
            console.nglog = function() {};
        }

    console.log = function(message) {
        console.nglog(message); 
        if (lastMsg != message) {
            $('#ng-eventlog').append('<div class="fs-base highlight p-1"><span class="d-flex align-items-center">' + '<span class="badge badge-default mr-2 text-right" style="min-width:50px">' + getTime() + '</span>' + message + '</span></div>');
            lastMsg = message;
            repeatCount = 0;
             $('#ng-eventlog').animate({ scrollTop: $('#ng-eventlog').prop("scrollHeight")}, 200);
        } else {
            lastMsg = message;
            repeatCount = repeatCount + 1;
            $('#ng-eventlog >:last-child').remove();
            $('#ng-eventlog').append('<div class="fs-base highlight p-1"><span class="d-flex align-items-center">'+ '<span class="badge badge-default mr-2 text-right" style="min-width:50px">' + getTime() + '</span>' + '<span class="badge badge-primary mr-1">' + repeatCount + '</span>' + message + '</span></div>');
            $('#ng-eventlog').animate({ scrollTop: $('#ng-eventlog').prop("scrollHeight")}, 200);
        }
    };

    console.error = console.debug = console.info =  console.log
    
</script>
{{/inline}}

{{/layouts/main}}
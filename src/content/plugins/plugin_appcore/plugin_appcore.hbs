{{#> 
    layouts/main 
    title="App.Core" 
    pagename="plugin_appcore" 
    category_1="Core Plugins" 
    heading="App.core.js <sup class='badge badge-warning fw-300 fs-sm'>main-application</sup>" 
    pagedescription="App.Core.js is the main application plugin"
}}

{{#*inline "head-block"}}
<link rel="stylesheet" media="screen, print" href="css/theme-demo.min.css">
{{/inline}}

{{#*inline "header-space-block"}}test{{/inline}}

{{#*inline "content-block"}}

<div class="row">


    <div class="col-lg-6 col-xl-6">

        <div class="card mb-g">

            <div class="card-body">

                <h3 class="mb-4">
                     App <span class="fw-300">API</span>
                    <small>
                       Allows you to
                    </small>
                </h3>

                <table class="table table-hover table-bordered bg-white m-0">
                    <thead>
                        <tr>
                            <th>
                                Try
                            </th>
                            <th>
                                Usage
                            </th>
                            <th>
                                Returns
                            </th>
                            <th>
                                Description
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <a href="javascript:void(0);" onclick="initApp.buildNavigation($('.navigation'));" class="btn btn-sm btn-default fs-nano">test</a>
                            </td>
                            <td>
                                <code>initApp.saveSettings()</code>
                            </td>
                            <td>
                                <i class="text-muted">-</i>
                            </td>
                            <td class="fs-sm">
                                Pushes selected classes from the <code>body</code> tag to localstorage/database
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <a href="javascript:void(0);" onclick="initApp.buildNavigation($('.navigation'));" class="btn btn-sm btn-default fs-nano">test</a>
                            </td>
                            <td>
                                <code>initApp.resetSettings()</code>
                            </td>
                            <td>
                                <i class="text-muted">-</i>
                            </td>
                            <td class="fs-sm">
                                Remove classes from <code>body</code> & saves to localstorage/database
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <a href="#" class="btn btn-sm btn-default fs-nano">test</a>
                            </td>
                            <td>
                                <code>initApp.accessIndicator()</code>
                            </td>
                            <td>
                                <i class="text-muted">-</i>
                            </td>
                            <td class="fs-sm">
                                Indicator for Save Settings (mostly aesthetics)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <a href="javascript:void(0);" onclick="initApp.buildNavigation($('.navigation'));" class="btn btn-sm btn-default fs-nano">test</a>
                            </td>
                            <td>
                                <code>initApp.pushSettings()</code>
                            </td>
                            <td>
                                <i class="text-muted">-</i>
                            </td>
                            <td class="fs-sm">
                                Push array to <code>body</code> tag. See <a href="intel_saving_db.html">saving to database</a> for more details
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <a href="javascript:void(0);" onclick="initApp.buildNavigation($('.navigation'));" class="btn btn-sm btn-default fs-nano">test</a>
                            </td>
                            <td>
                                <code>initApp.getSettings()</code>
                            </td>
                            <td>
                                <i class="fw-500 text-primary">string</i>
                            </td>
                            <td class="fs-sm">
                                Fetch class names from <code>body</code> and convert them to JSON string. See <a href="intel_saving_db.html">saving to database</a> for more details
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <a href="javascript:void(0);" onclick="initApp.buildNavigation($('.navigation'));" class="btn btn-sm btn-default fs-nano">test</a>
                            </td>
                            <td>
                                <code>initApp.getNewWindowHeight()</code>
                            </td>
                            <td>
                                <i class="fw-500 text-success">int</i>
                            </td>
                            <td class="fs-sm">
                                Returns window height for layout calculations
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <a href="javascript:void(0);" onclick="initApp.buildNavigation($('.navigation'));" class="btn btn-sm btn-default fs-nano">test</a>
                            </td>
                            <td>
                                <code>initApp.detectBrowserType()</code>
                            </td>
                            <td>
                                <i class="fw-500 text-primary">string</i>
                            </td>
                            <td class="fs-sm">
                                Detects webkit and chrome browsers
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <a href="javascript:void(0);" onclick="initApp.buildNavigation($('.navigation'));" class="btn btn-sm btn-default fs-nano">test</a>
                            </td>
                            <td>
                                <code>initApp.addDeviceType()</code>
                            </td>
                            <td>
                                <i class="fw-500 text-primary">string</i>
                            </td>
                            <td class="fs-sm">
                                Detects whether device is desktop or mobile
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <a href="javascript:void(0);" onclick="initApp.buildNavigation($('.navigation'));" class="btn btn-sm btn-default fs-nano">test</a>
                            </td>
                            <td>
                                <code>initApp.fixAppHeight()</code>
                            </td>
                            <td>
                                <i class="text-muted">-</i>
                            </td>
                            <td class="fs-sm">
                                Saves app settings to localstorage
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <a href="javascript:void(0);" onclick="initApp.buildNavigation($('.navigation'));" class="btn btn-sm btn-default fs-nano">test</a>
                            </td>
                            <td>
                                <code>initApp.windowScrollEvents()</code>
                            </td>
                            <td>
                                <i class="text-muted">-</i>
                            </td>
                            <td class="fs-sm">
                                Saves app settings to localstorage
                            </td>
                        </tr>
                        <tr>
                            <td>
                                -
                            </td>
                            <td>
                                <code>initApp.checkSettingConditions()</code>
                            </td>
                            <td>
                                <i class="text-muted">-</i>
                            </td>
                            <td class="fs-sm">
                                Saves app settings to localstorage
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <a href="javascript:void(0);" onclick="initApp.buildNavigation($('.navigation'));" class="btn btn-sm btn-default fs-nano">test</a>
                            </td>
                            <td>
                                <code>initApp.buildNavigation(id)</code>
                            </td>
                            <td>
                                <i class="fw-500 text-primary">string</i>
                            </td>
                            <td class="fs-sm">
                                Saves app settings to localstorage
                            </td>
                        </tr>
                        <tr>
                            <td>
                                -
                            </td>
                            <td>
                                <code>initApp.mobileCheckActivation()</code>
                            </td>
                            <td>
                                <i class="fw-500 text-danger">bool</i>
                            </td>
                            <td class="fs-sm">
                                Saves app settings to localstorage
                            </td>
                        </tr>
                        <tr>
                            <td>
                                -
                            </td>
                            <td>
                                <code>initApp.toggleVisibility()</code>
                            </td>
                            <td>
                                <i class="text-muted">-</i>
                            </td>
                            <td class="fs-sm">
                                Saves app settings to localstorage
                            </td>
                        </tr>
                        <tr>
                            <td>
                                -
                            </td>
                            <td>
                                <code>initApp.domReadyMisc()</code>
                            </td>
                            <td>
                                <i class="text-muted">-</i>
                            </td>
                            <td class="fs-sm">
                                Fires a series of events, see "Initialization shell" to your left, for more details.
                            </td>
                        </tr>                
                    </tbody>
                </table>

            </div>

        </div>

        <div class="card mb-g">

            <div class="card-body">

                <h3 class="mb-4">
                    Debugging <span class="fw-300">console.log</span> 
                    <small>
                        view the app.core.js debugger in realtime; assists in the detection and correction of errors
                    </small>
                </h3>

                <div id="app-eventlog" class="card bg-faded p-1 h-auto"></div>

            </div>

        </div>

        <div class="card mb-g">

            <div class="card-body">

                <h3 class="mb-4">
                    Action <span class="fw-300">buttons</span> 
                    <small>
                        Allows you to
                    </small>
                </h3>

                <table class="table table-hover table-bordered bg-white m-0">
                    <thead>
                        <tr>
                            <th>
                                Action
                            </th>
                            <th>
                                Description
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <code>data-toggle</code>
                            </td>
                            <td class="fs-sm">
                                Push data-class to <code>body</code> element 
                                usage: <pre class="m-0 prettyprint border-0 fs-base">data-action="toggle" data-class="class-a class-b" data-target="#target"</pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>data-toggle-swap</code>
                            </td>
                            <td class="fs-sm">
                                <pre class="m-0 prettyprint border-0 fs-base">data-action="toggle-swap" data-class="class-a class-b" data-target="#target"</pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>data-panel-*</code>
                            </td>
                            <td class="fs-sm">
                                Push array to <code>body</code> tag. See <a href="intel_saving_db.html">saving to database</a> for more details
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>data-theme-update</code>
                            </td>
                            <td class="fs-sm">
                                <pre class="m-0 prettyprint border-0 fs-base">data-action="theme-update" data-theme="path_to_css/css.css"</pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <code>data-app-reset</code>
                            </td>
                            <td class="fs-sm">
                                <pre class="m-0 prettyprint border-0 fs-base">data-action="app-reset"</pre>
                            </td>
                        </tr>  
                        <tr>
                            <td>
                                <code>data-app-print</code>
                            </td>
                            <td class="fs-sm">
                                Print page (similar to pressing CTRL/CMD + P)
                                <pre class="m-0 prettyprint border-0 fs-base">data-action="app-print"</pre>
                            </td>
                        </tr> 
                        <tr>
                            <td>
                                <code>data-app-fullscreen</code>
                            </td>
                            <td class="fs-sm">
                                Activates broswer's fullscreen command (may not work in all browsers)
                                <pre class="m-0 prettyprint border-0 fs-base">data-action="app-fullscreen"</pre>
                            </td>
                        </tr>           
                    </tbody>
                </table>

            </div>

        </div>

    </div>

    <div class="col-lg-6 col-xl-6">

        <div class="card mb-g">

            <div class="card-body">

                <h3 class="mb-4">
                    Config <span class="fw-300">settings</span> 
                    <small>
                        Define preferred application behaviors or configuration options; can modify some functionality of the app
                    </small>
                </h3>

<pre class="prettyprint mb-0">
var myapp_config = {
    root_: $('body'),
    windowHeight: $(window).height(),
    navHeightGap: ($('#nav-footer').height() || 0) + $('header').height() + 1,
    throttleDelay: 450, //ms
    thisDevice: null, 
    isMobile: (/iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i
                .test(navigator.userAgent.toLowerCase())), 
    mobileMenuTrigger: null,
    isWebkit: ((!!window.chrome && !!window.chrome.webstore) === true || 
                Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') 
                > 0 === true),
    isChrome: (/chrom(e|ium)/.test(navigator.userAgent.toLowerCase())),
    debugState: true, 
    disableRippleEffect: false, 
    mythemeAnchor: '#mytheme',
    navAnchor: '#primary-nav',
    navHooks: '#primary-nav > ul.navigation'
    navSpeed: 500, 
    navClosedSign: 'icon icon-chevron-down',
    navOpenedSign: 'icon icon-chevron-up',
    navAccordion: true,
    storeLocally: true
};</pre>

            </div> 

        </div>

        <div class="card mb-g">

            <div class="card-body">
                <h3 class="mb-4">
                    Initilization <span class="fw-300">shell</span> 
                    <small>
                        Showcasing app 
                    </small>
                </h3>

<pre class="prettyprint mb-0">
/* App initialize */
var initApp = (function(app) {
    app.saveSettings = function () { ... }
    app.resetSettings = function () { ... }
    app.accessIndicator = function () { ... }
    app.pushSettings = function (DB_string) { ... }
    app.getSettings = function () { ... }
    app.getNewWindowHeight = function () { ... }
    app.detectBrowserType = function () { ... }
    app.addDeviceType = function() { ... }
    app.fixAppHeight = function () { ... }
    app.windowScrollEvents = function () { ... }
    app.checkSettingConditions = function() { ... }
    app.buildNavigation = function() { ... }
    app.mobileCheckActivation = function(){ ... }
    app.toggleVisibility = function (id) { ... }
    app.domReadyMisc = function() { 
       /* get app date */
       /* activate last tab used */
       /* activate/destroy slimscroll */
       /* activates tooltip */
       /* activates image lazyload mechanic */
       /* enable dropdown */
       /* enable ripple effect */
       /* attach action buttons */
       /* menu tap actions (for mobile) */
       /* initialize windows mobile 8 fix for BS4 */
       ...
    }
    return app;
})({});

/* Bind the throttled handler to the resize event */
$(window).resize(
    $.throttle( myapp_config.throttleDelay, function (e) {
        /* (1a) ADD CLASS WHEN BELOW CERTAIN WIDTH (MOBILE MENU) */
        initApp.mobileCheckActivation();
        /* (2a) FIX APP HEIGHT */
        initApp.getNewWindowHeight();
        /* (2b) FIX APP HEIGHT */
        initApp.calculateAppHeight();     
    })
); 

/* Bind the throttled handler to the scroll event */
$(window).scroll(
    $.throttle( myapp_config.throttleDelay, function (e) {
        /* FIX APP HEIGHT */
        initApp.fixAppHeight();
    })
);
/* Initiate scroll events */
$(window).on('scroll', initApp.windowScrollEvents);

/* Document loaded event */
jQuery(document).ready(function() {
    /* detect desktop or mobile */
    initApp.addDeviceType();
    /* detect Webkit Browser */
    initApp.detectBrowserType();
    /* a. check for mobile view width and add class .mobile-view-activated */
    initApp.mobileCheckActivation();
    /* b. assign window height on page load */    
    initApp.getNewWindowHeight();
    /* c. fix application height */    
    initApp.fixAppHeight(); 
    /* d. build navigation */
    initApp.buildNavigation(myapp_config.navHooks);
    /* e. run DOM misc functions */
    initApp.domReadyMisc();
    /* f. material form effects */
    initApp.materialFormEffects();
});</pre>

            </div>

        </div>    

    </div>	

</div>




{{/inline}}

{{#*inline "scripts-block"}}
<script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js"></script>
<script>

    // state debug state for debug msg
    myapp_config.debugState = true;

    // variables
    var lastMsg = "",
        repeatCount = 0,
        // get new time date on page load
        getTime = function () {
            var dt = new Date(),
                time = dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
            return time;
        };

    //define type    
    if (typeof console  != "undefined") 
        if (typeof console.log != 'undefined') {
            console.nglog = console.log;
        }
        else {
            console.nglog = function() {};
        }

    // push console messages to #div 
    console.log = function(message) {
        console.nglog(message); 
        if (lastMsg != message) {
            $('#app-eventlog').append('<div class="highlight p-1"><span class="d-flex align-items-center">' + '<span class="badge badge-primary mr-2">' + getTime() + '</span>' + message + '</span></div>');
            lastMsg = message;
            repeatCount = 0;
             $('#app-eventlog').animate({ scrollTop: $('#app-eventlog').prop("scrollHeight")}, 200);
        } else {
            lastMsg = message;
            repeatCount = repeatCount + 1;
            $('#app-eventlog >:last-child').remove();
            $('#app-eventlog').append('<div class="highlight p-1"><span class="d-flex align-items-center">'+ '<span class="badge badge-primary mr-2">' + getTime() + '</span>' + '<span class="badge badge-primary mr-1">' + repeatCount + '</span>' + message + '</span></div>');
            $('#app-eventlog').animate({ scrollTop: $('#app-eventlog').prop("scrollHeight")}, 200);
        }
    };

    // compile messages to one log
    console.error = console.debug = console.info =  console.log

</script>
{{/inline}}

{{/layouts/main}}
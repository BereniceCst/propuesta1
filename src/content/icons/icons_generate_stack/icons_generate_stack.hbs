{{#> 
layouts/main 
title="Generate Stack Icon" 
pagename="icons_generate_stack" 
category_1="Font Icons" 
heading="Generate Stack Icon <sup class='badge badge-success fw-500'>ADDON</sup>" 
pagedescription="Generate icons"
}}

{{#*inline "head-block"}}
<link rel="stylesheet" media="screen, print" href="css/fa-regular.min.css">
<link rel="stylesheet" media="screen, print" href="css/fa-solid.min.css">
<link rel="stylesheet" media="screen, print" href="css/fa-brands.min.css">
<link rel="stylesheet" media="screen, print" href="css/ng-icons.min.css">
{{/inline}}

{{#*inline "content-block"}}

<div class="container">
    

    <div class="card">
        <div class="card-body">

            <div class="d-flex">

                <div class="d-flex align-items-center justify-content-center position-relative" style="font-size: 250px; width: 351px; height: 401px; background: url(img/backgrounds/bg-5.png) #fff; border-left:0; border-top:0; ">

                    <h6 class="fw-700 position-absolute pos-bottom pos-right m-2 bg-fusion-100 p-2 rounded fs-sm">Live Preview</h6>

                    <div id="icon-construct" class="icon-stack"></div>

                </div>
                <div class="flex-1 pl-3">
                    <h2>
                        Design your stack
                        <small>
                            Preselect your icon stack and generate your unique icon
                        </small>
                    </h2>

                    <div class="frame-wrap mb-2" id="construct-wrap"></div>

                    <div class="row">
                        <div class="col-12 text-right">
                            <a href="#" class="btn btn-success">
                                Copy Icon
                            </a>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>

</div>

{{/inline}}

{{#*inline "scripts-block"}}

<script>

var fa_icon, 
    fa_brand, 
    ni_icon, 
    ni_base,
    ng_textColors,
    fa_icon_URL = "fa-icon-list.json",
    fa_brand_URL = "fa-brand-list.json",
    ni_icon_URL = "ng-icon-list.json",
    ni_base_URL = "ng-icon-base.json",
    ng_textColors_URL = "ng-text-colors.json",
    prefix = ["base","fal","fas","far","fab","ni"],
    opacity = [5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100],
    iconSize = ["icon-stack-3x","icon-stack-2x","icon-stack-1x"],
    layers = 3,
    constructWrap = $('#construct-wrap');
    constructIcon = $('#icon-construct');

   var formatedDOMElms = [];
   var formattedDOMIcon = [];


   var formatPrefix = [];
   var formatOpacityValue =[];
   var formatIconSize = [];
   var formatTextColors = [];

   var format_fa_icon =[];
   var format_fa_brand =[];
   var format_ni_icon =[];
   var format_ni_base =[];

$.when(
    $.getJSON(fa_icon_URL, function(data) {
        fa_icon = data;
    }),
    $.getJSON(fa_brand_URL, function(data) {
        fa_brand = data;
    }),
    $.getJSON(ni_icon_URL, function(data) {
        ni_icon = data;
    }),
    $.getJSON(ni_base_URL, function(data) {
        ni_base = data;
    }),
    $.getJSON(ng_textColors_URL, function(data) {
        ng_textColors = data;
    })
).then(function() {
    if (fa_icon && fa_brand && ni_icon && ni_base && ng_textColors) {



       //formatPrefix
       jQuery.each(prefix, function(index, item) {
           formatPrefix.push($('<option></option>').attr("value", item).attr("data-prefix", item).text(item))
       });

       //formatOpacityValue
       jQuery.each(opacity, function(index, item) {
           formatOpacityValue.push($('<option></option>').attr("value", 'opacity-' + item).text(item))

       });

       //formatIconSize
       jQuery.each(iconSize, function(index, item) {
           formatIconSize.push($('<option></option>').attr("value", item).attr("data-iconsize", item).text("size-" + item.slice(11)))

       });

       //formatTextColors
       jQuery.each(ng_textColors, function(index, item) {
           //formatTextColors.push('<a href="#" class="btn btn-m-l d-inline-block bg'+ item.slice(5) +' width-1 height-1 js-icon-color" data-icon-color="'+item+'"></a>')
           formatTextColors.push($('<option></option>').attr("value", item).addClass("bg" + item.slice(5)).text(item.slice(6)))
       });

       //format_fa_icon
       jQuery.each(fa_icon, function(index, item) {
           //format_fa_icon.push($('<option></option>').attr("value", item).attr("data-icon-class", item).text(item.slice(1)))
           format_fa_icon.push('<option value="fa'+ item +'" data-icon-class="'+ item +'">'+ item.slice(1) +'</option>')
       });
       //fa_brand
       jQuery.each(fa_brand, function(index, item) {
           //format_fa_brand.push($('<option></option>').attr("value", item).attr("data-icon-class", item).text(item.slice(1)))
           format_fa_brand.push('<option value="fa'+ item +'" data-icon-class="'+ item +'">'+ item.slice(1) +'</option>')
       });
       //format_ni_icon
       jQuery.each(ni_icon, function(index, item) {
           //format_ni_icon.push($('<option></option>').attr("value", item).attr("data-icon-class", item).text(item.slice(1)))
           format_ni_icon.push('<option value="ni'+ item +'" data-icon-class="'+ item +'">'+ item.slice(1) +'</option>')
       });
       //format_ni_base
       jQuery.each(ni_base, function(index, item) {
           //format_ni_base.push($('<option></option>').attr("value", item).attr("data-icon-class", item).text(item))
            format_ni_base.push('<option value="'+ item +'" data-icon-class="'+ item +'">'+ item +'</option>')
       });


       /*console.log(formatPrefix)
       console.log(formatOpacityValue)
       console.log(formatIconSize)
       console.log(formatTextColors)*/
       //$("#selectId").empty().append(option);

       //console.log(format_ni_base)


        for(var i = 0; i < layers; i++) {

            /* pushing icons */
            formattedDOMIcon.push('<i data-icon-select="'+ i +'" class=""></i>')

            /* pushing controls */
            formatedDOMElms.push('<div id="layer-'+ i +'" class="row no-gutters" data-layer-target="'+ i +'">\
                                    <div class="col-12">\
                                        <h4 class="frame-heading">Layer '+ i +'</h4>\
                                    </div>\
                                    <div class="col-sm-2">\
                                        <div class="form-group mr-2">\
                                            <select class="js-icon-prefix js-select-trigger custom-select w-100"></select>\
                                        </div>\
                                    </div>\
                                    <div class="col-sm-3">\
                                        <div class="form-group mr-2">\
                                            <select data-icon-target="'+ i +'" class="js-icon-class js-select-trigger custom-select w-100"></select>\
                                        </div>\
                                    </div>\
                                    <div class="col-sm-2">\
                                        <div class="form-group mr-2">\
                                            <select class="js-icon-size js-select-trigger custom-select w-100"></select>\
                                        </div>\
                                    </div>\
                                    <div class="col-sm-2">\
                                        <div class="form-group mr-2">\
                                            <select class="js-icon-opacity js-select-trigger custom-select w-100"></select>\
                                        </div>\
                                    </div>\
                                    <div class="col-sm-3">\
                                        <div class="form-group mr-2">\
                                            <select class="js-icon-color js-select-trigger custom-select w-100"></select>\
                                        </div>\
                                    </div>\
                                </div>');

        }

        constructWrap.append(formatedDOMElms.join(" "));
        constructIcon.append(formattedDOMIcon.join(" "));
        $("select.js-icon-prefix").empty().append(formatPrefix);
        $("select.js-icon-size").empty().append(formatIconSize);
        $("select.js-icon-opacity").empty().append(formatOpacityValue.reverse());
        $("select.js-icon-class").empty().append(format_ni_base.reverse());
        $("select.js-icon-color").empty().append(formatTextColors);
        //$('.js-color-selectors').empty().append(formatTextColors);

        /*jQuery.each(layers, function(index, item) {
            console.log("test")
        })*/

        $(document).on('change', '.js-icon-prefix', function(){

           var selectValue =  $(this).val();

          if(selectValue == 'fal' || selectValue == 'fas' || selectValue == 'far' || selectValue == 'fab') {

             $(this).closest('[data-layer-target]').find('.js-icon-class').empty().append(format_fa_icon);

            console.log("match 'fal' || 'fas' || 'far' || 'fab'")

          } else if (selectValue == 'ni') {

            $(this).closest('[data-layer-target]').find('.js-icon-class').empty().append(format_ni_icon);
            console.log("match 'ni'")


          } else if (selectValue == 'base') {

            $(this).closest('[data-layer-target]').find('.js-icon-class').empty().append(format_ni_base);
            console.log("match 'base'")
          }

        })

        $(document).on('change', 'select.js-select-trigger', function(){
            var uniqueID = $(this).closest('[data-layer-target]').attr('data-layer-target');
            runIconGenerator(uniqueID);
        })
        /*$(document).on('change', '.js-icon-class', function(){
            var uniqueID = $(this).closest('[data-layer-target]').attr('data-layer-target');
            runIconGenerator(uniqueID);
        })
        $(document).on('change', '.js-icon-size', function(){
            var uniqueID = $(this).closest('[data-layer-target]').attr('data-layer-target');
            runIconGenerator(uniqueID);
        })
        $(document).on('change', '.js-icon-opacity', function(){
            var uniqueID = $(this).closest('[data-layer-target]').attr('data-layer-target');
            runIconGenerator(uniqueID);
        })*/

        var runIconGenerator = function (id){
            var uID = $('[data-layer-target="'+ id +'"]');
            var iconPrefix = uID.find('select.js-icon-prefix').val();
            var iconClass = uID.find('select.js-icon-class').val();
            var iconSize = uID.find('select.js-icon-size').val();
            var iconOpacity = uID.find('select.js-icon-opacity').val();
            var iconColor = uID.find('select.js-icon-color').val();

            // console.log(iconPrefix);
            // console.log(iconClass);
            // console.log(iconSize);
            // console.log(iconOpacity);

            $('#icon-construct').find('[data-icon-select="'+ id +'"]').removeClass().addClass(iconPrefix + " " + iconClass + " " + iconSize + " " + iconOpacity + " " + iconColor)
        };
        
    }
    else {
        
    }
});

</script>

{{/inline}}

{{/layouts/main}}
{{#> 
	layouts/main 
	title="Datatables: AltEditor (beta)" 
	pagename="datatables_alteditor" 
	category_1="Datatables"
	heading="<i class='subheader-icon fal fa-table'></i> DataTables: <span class='fw-300'>AltEditor (beta)</span> <sup class='badge badge-primary fw-500'>ADDON</sup>" 
	pagedescription="Custom made editor plugin designed for Datatables"
}}

{{#*inline "head-block"}}
	<link rel="stylesheet" media="screen, print" href="css/datagrid/datatables/datatables.bundle.css">
	<link rel="stylesheet" media="screen, print" href="css/theme-demo.css">
{{/inline}}

{{#*inline "content-block"}}
<div class="alert alert-primary">
	<div class="d-flex flex-start w-100">
		<div class="mr-2 hidden-md-down">
			<span class="icon-stack icon-stack-lg">
				<i class="base base-2 icon-stack-3x opacity-100 color-primary-500"></i>
				<i class="base base-2 icon-stack-2x opacity-100 color-primary-300"></i>
				<i class="fal fa-info icon-stack-1x opacity-100 color-white"></i>
			</span>
		</div>
		<div class="d-flex flex-fill">
			<div class="flex-fill">
				<span class="h5">About</span>
				<p>
					DataTables is a plug-in for the jQuery Javascript library. It is a highly flexible tool, built upon the foundations of progressive enhancement, that adds all of these advanced features to any HTML table.
					The stated goal of DataTables is "To enhance the accessibility of data in HTML tables". In order to achieve this we recognise that DataTables has two categories of users that interact with the interfaces the software has:
				</p>
				<ul>
					<li>
						End users - those who use the interface in the browser that you create with DataTables
					</li>
					<li>
						Developers - yourself and the other developers working with DataTables to create your apps, sites, services, etc.
					</li>
				</ul>
				<p class="m-0">
					Find in-depth, guidelines, tutorials and more on Datatables's <a href="https://www.datatables.net/manual/" target="_blank">Official Documentation</a> 
				</p>
			</div>
		</div>
	</div>
</div>
<div class="row">
	<div class="col-xl-12">
		<div id="panel-1" class="panel">
			<div class="panel-hdr">	
				<h2>
					Example <span class="fw-300"><i>Table</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">									
					<div class="panel-tag">
						This example shows DataTables and the Responsive extension being used with the Bootstrap framework providing the styling. The DataTables / Bootstrap integration provides seamless integration for DataTables to be used in a Bootstrap page. <strong>Note</strong> that the <code>.dt-responsive</code> class is used to indicate to the extension that it should be enabled on this page, as responsive has special meaning in Bootstrap. The responsive option could also be used if required
					</div>
					<div class="row">
						<div class="col-xl-12">
							<!-- datatable start -->
							<table id="dt-basic-example" class="table table-bordered table-hover table-striped w-100"></table>
							<!-- datatable end -->
						</div>
						<div class="col-xl-12">
							<hr class="mt-5 mb-5">
							<h5>Event <i>logs (AJAX Calls)</i></h5>
							<div id="app-eventlog" class="alert alert-primary p-1 h-auto my-3" style="max-height: 530px"></div>
						</div>
					</div>					
				</div>
			</div>
		</div>
	</div>
</div>

{{/inline}}

{{#*inline "scripts-block"}}

<!-- datatble responsive bundle contains: 
	+ jquery.dataTables.js
	+ dataTables.bootstrap4.js
	+ dataTables.autofill.js							
	+ dataTables.buttons.js
	+ buttons.bootstrap4.js
	+ buttons.html5.js
	+ buttons.print.js
	+ buttons.colVis.js
	+ dataTables.colreorder.js							
	+ dataTables.fixedcolumns.js							
	+ dataTables.fixedheader.js						
	+ dataTables.keytable.js						
	+ dataTables.responsive.js							
	+ dataTables.rowgroup.js							
	+ dataTables.rowreorder.js							
	+ dataTables.scroller.js							
	+ dataTables.select.js							
	+ datatables.styles.app.js
	+ datatables.styles.buttons.app.js -->
<script src="js/datagrid/datatables/datatables.bundle.js"></script>
<script src="../src/custom/plugins/datatables-alteditor/datatables-alteditor.js"></script>

<script>

	$(document).ready( function () {

		//////////////////////////////////////////
		/*
		IMPORTANT - COLUMNDEFS

		Always add the DT_RowId row and always add it as the first column!
		- Visibility state doesnt matter but searchable
		  state should be set to the same value.

		Always add a type!
		Current supported type parameters:
		text      - for editable textfields (including numbers, emails etc.)
		select    - for select menues, if used then options should be specified aswell
		readonly  - for fields with readonly attribute.

		Other parameters:

		MANDATORY:
		id        - Should be set to same value as data-parameter.
		data      - Identifier of value in data from AJAX call.
		title     - Title of column.

		OPTIONAL:
		pattern   - For inputvalidation of the textfield. Specify a regex for the pattern to use.
		errorMsg  - Message that is shown when mismatch with pattern is found.
		hoverMsg  - Message that is shown on mouseover on text fields (hints).
		unique    - Data that can only exist once in the datatable. Shows an error on input if found.
		special   - Only working setting is "portRange". This is in relation to input validation.
					If used then validation will check for a portrange in format (startPort:endPort)
					and validate both with the supplied regex.


		*/
		//////////////////////////////////////////

		//Example of column definitions.

		var events = $("#app-eventlog");

		var columnSet = [{
			title: "SID",
			id: "DT_RowId",
			data: "DT_RowId",
			placeholderMsg: "Auto generated ID",
			"visible": false,
			"searchable": false,
			type: "readonly"
		}, 
		{
			title: "Status",
			id: "status",
			data: "status",
			type: "select", 
			"options": [
				"active",
				"inactive",
				"disabled",
				"partial"
			]/*,
			"optionsVal": [
				"1",
				"2",
				"3",
				"4"
			]*/
		}, 
		{
			title: "IP Address",
			id: "ipAddress",
			data: "ipAddress",
			type: "text",
			pattern: "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.|$)){4}",
			placeholderMsg: "e.g 82.84.86.88",
			errorMsg: "*Invalid address - Enter valid ip.",
			hoverMsg: "(Optional) - Ex: 82.84.86.88",
			unique: true,
			uniqueMsg: "Already exists. IP must be unique!"

		}, 
		{
			title: "Port Number",
			id: "port",
			data: "port",
			type: "text",
			pattern: "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$",
			placeholderMsg: "e.g 6112",
			errorMsg: "*Invalid port - Enter valid port or range.",
			hoverMsg: "Ex: 6112 (single)   or   6111:6333 (range)",
			unique: false
		}, 
		{
			title: "Activation Date",
			id: "adate",
			data: "adate",
			type: "date",
			pattern: "((?:19|20)\d\d)-(0?[1-9]|1[012])-([12][0-9]|3[01]|0?[1-9])",
			placeholderMsg: "yyyy-mm-dd",
			errorMsg: "*Invalid date format. Format must be yyyy-mm-dd"
		},
		{
			title: "User Email",
			id: "user",
			data: "user",
			type: "text",
			pattern: "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$",
			placeholderMsg: "user@domain.com",
			errorMsg: "*Invalid email - Enter valid email.",
			unique: true,
			uniqueMsg: "Email already in use"
		},
		{
			title: "Package",
			id: "package",
			data: "package",
			type: "select", 
			"options": [
				"free",
				"silver",
				"gold",
				"platinum",
				"payg"
			]
		},
		{
			title: "Acc. Balance",
			id: "balance",
			data: "balance",
			type: "number",
			placeholderMsg: "Amount due"
		}]


		var myTable = $('#dt-basic-example').dataTable({
			dom: "<'row mb-3'<'col-sm-12 col-md-6 d-flex align-items-center justify-content-start'f><'col-sm-12 col-md-6 d-flex align-items-center justify-content-end'B>>" +
				"<'row'<'col-sm-12'tr>>" +
				"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
			ajax: "server-demo.json", //Receiving data from this source. 
			columns: columnSet, //Columns defined above.
			select: 'single', //Only single column selection is implemented.
			altEditor: true, //Enable altEditor.
			responsive: true, //Enable responsiveness.
			buttons: [
				{
					extend: 'selected',
					text: '<i class="fal fa-edit mr-1"></i> Edit',
					name: 'edit',
					className: 'btn-primary btn-sm mr-1'
				},
				{
					extend: 'selected',
					text: '<i class="fal fa-times mr-1"></i> Delete',
					name: 'delete',
					className: 'btn-primary btn-sm mr-1'
				},
				{
					text: '<i class="fal fa-plus mr-1"></i> Add',
					name: 'add',
					className: 'btn-primary btn-sm mr-1'
				},
				{
					text: '<i class="fal fa-sync mr-1"></i> Synchronize',
					name: 'refresh',
					className: 'btn-primary btn-sm'
				}							
			],
			columnDefs: [
				{
					targets: 1,
					render: function(data, type, full, meta) {
						var badge = {
							"active": {'title': 'Active', 'class': 'badge-success'},
							"inactive": {'title': 'Inactive', 'class': 'badge-warning'},
							"disabled": {'title': 'Disabled', 'class': 'badge-danger'},
							"partial": {'title': 'Partial', 'class': 'bg-danger-100 text-white'}
						};
						if (typeof badge[data] === 'undefined') {
							return data;
						}
						return '<span class="badge ' + badge[data].class + ' badge-pill">' + badge[data].title + '</span>';
					},
				},
				{
					targets: 7,
					type: 'currency',
					render: function(data, type, full, meta) {
						//var number = Number(data.replace(/[^0-9.-]+/g,""));
						if (data >= 0) {
							return '<span class="text-success fw-500"> $'+data+'</span>';
						} else {
							return '<span class="text-danger fw-500"> $'+data+'</span>';
						}
					},
				},
				{
					targets: 6,
					render: function(data, type, full, meta) {
						var badge = {
							"free": {'title': 'Free', 'class': 'bg-fusion-50'},
							"silver": {'title': 'Silver', 'class': 'bg-fusion-50 bg-fusion-gradient'},
							"gold": {'title': 'Gold', 'class': 'bg-warning-500 bg-warning-gradient'},
							"platinum": {'title': 'Platinum', 'class': 'bg-trans-gradient'},
							"payg": {'title': 'PAYG', 'class': 'bg-success-500 bg-success-gradient'}
						};
						if (typeof badge[data] === 'undefined') {
							return data;
						}
						return '<div class="has-popover d-flex align-items-center" data-toggle="popover" data-trigger="hover" data-placement="top" title="" data-content="test" data-original-title="Display on hover"><span class="d-inline-block rounded-circle mr-2 ' + badge[data].class + '" style="width:15px; height:15px;"></span><span>' + badge[data].title + '</span></div>';
					},
				},
			],	
			/**
			 * Default callback for insertion: mock webservice, always success.
			 */
			onAddRow: function(dt, rowdata, success, error) {
				console.log("Missing AJAX configuration for INSERT");
				success(rowdata);

				// demo only below:
				events.prepend('<p class="text-success fw-500">'+JSON.stringify(rowdata, null, 4) + '</p>'); 
			},

			/**
			 * Default callback for editing: mock webservice, always success.
			 */
			onEditRow: function(dt, rowdata, success, error) {
				console.log("Missing AJAX configuration for UPDATE");
				success(rowdata);

				// demo only below:
				events.prepend('<p class="text-info fw-500">'+JSON.stringify(rowdata, null, 4) + '</p>'); 
			},

			/**
			 * Default callback for deletion: mock webservice, always success.
			 */
			onDeleteRow: function(dt, rowdata, success, error) {
				console.log("Missing AJAX configuration for DELETE");
				success(rowdata);

				// demo only below:
				events.prepend('<p class="text-danger fw-500">'+JSON.stringify(rowdata, null, 4) + '</p>'); 
			},		
		});
 

		//Activate dynamic popovers
		$('body').popover({
			selector: '.has-popover',
			trigger: 'hover'
		});

	});
</script>

{{/inline}}

{{/layouts/main}}